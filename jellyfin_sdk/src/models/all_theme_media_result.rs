/*
 * Jellyfin API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 10.8.11
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct AllThemeMediaResult {
    #[serde(rename = "ThemeVideosResult", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub theme_videos_result: Option<Option<Box<crate::models::AllThemeMediaResultThemeVideosResult>>>,
    #[serde(rename = "ThemeSongsResult", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub theme_songs_result: Option<Option<Box<crate::models::AllThemeMediaResultThemeVideosResult>>>,
    #[serde(rename = "SoundtrackSongsResult", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub soundtrack_songs_result: Option<Option<Box<crate::models::AllThemeMediaResultThemeVideosResult>>>,
}

impl AllThemeMediaResult {
    pub fn new() -> AllThemeMediaResult {
        AllThemeMediaResult {
            theme_videos_result: None,
            theme_songs_result: None,
            soundtrack_songs_result: None,
        }
    }
}


